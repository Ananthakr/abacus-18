"use strict";var precacheConfig=[["/index.html","86b8bb95624f1d780bee0753895d592b"],["/static/css/main.932ec28d.css","6d5e931050f14ce57aeb60e1a7515364"],["/static/js/0.66c41dd5.chunk.js","d8f1af324b79c467dabbeaeb52c2d20b"],["/static/js/1.240b68d7.chunk.js","55d08ee95810d365d33aac0c84bad6c2"],["/static/js/10.c03a9514.chunk.js","90423dfbf8b509f35152f2ea6898a452"],["/static/js/2.e18be44d.chunk.js","9a152035ddf88d5461783e7e956e7d3f"],["/static/js/3.ea39adeb.chunk.js","22127525fe7f60cedcc53464162a000f"],["/static/js/4.b1fc071f.chunk.js","8f2b3accce358cbffff7b373bee7073d"],["/static/js/5.696ce1c8.chunk.js","43dca299ea92bb80bba83356fee31782"],["/static/js/6.50502783.chunk.js","9177d0411cfd61d254573cc5d63e1f15"],["/static/js/7.ae785690.chunk.js","0dcfdf189aecd8254b03a0d97efec468"],["/static/js/8.8a14680a.chunk.js","0e38e79d51d1509cc0c232ccc4f89571"],["/static/js/9.4c413b70.chunk.js","968746e5dd94fd9147767620ac1950aa"],["/static/js/main.b9350356.js","5c0348179dd70fa9344527eb9cfa67e2"],["/static/media/abishek.87636d19.jpg","87636d196cfb4fba87b2ea9f967bd758"],["/static/media/facebook.c3310087.svg","c33100879ab19da0c462c84931aada39"],["/static/media/freshworks.a3e270b7.png","a3e270b73c91489414a8c51e7f29e6e0"],["/static/media/gowri.190c4cd7.png","190c4cd79a6ce217597735a2912ab079"],["/static/media/ivtl.defde4a6.png","defde4a6ab03df4893629b3d8d318be6"],["/static/media/logo.3ae5cd3b.svg","3ae5cd3be23d876f6c655de0c1db6fef"],["/static/media/pradeeksha.2b129fac.jpg","2b129facdfa38e0e882ce69212719b1d"],["/static/media/server.54931958.jpg","54931958f1ff970573c4bd65f3e901c0"],["/static/media/thillai.9b216c76.jpg","9b216c76e58d3c7770791ab66377e098"],["/static/media/twitter.8ead66e0.svg","8ead66e0ac63aa4b5c0ef94ab07210f0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),c="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),t=urlsToCacheKeys.has(a));var n="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(n,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});