"use strict";var precacheConfig=[["/index.html","5e18427f07e252519ce27bcd019ec07e"],["/static/css/main.9f74f954.css","e205858b08ec3421f4d50d5c1ade43ca"],["/static/js/0.e5be760d.chunk.js","15b91601831f94ce3803be83e771bd57"],["/static/js/1.5e404544.chunk.js","88fe8ae3d32fe0b0361220e2a5adc467"],["/static/js/10.19697685.chunk.js","50b19b5b5101b68d94336bf8ff87c933"],["/static/js/11.1eb67aa0.chunk.js","6cc92d84d615ac8f47cebb4900effdc8"],["/static/js/12.bc8bf2df.chunk.js","44ae6a542f3438e0912c225b76d1f880"],["/static/js/13.58dc662f.chunk.js","39a82d2a3060db0c5153a724867ffc1f"],["/static/js/14.9a94e74c.chunk.js","2886dbd9cf0abaae99242f35b5fccf32"],["/static/js/2.ce4c7694.chunk.js","4d542007a51ee8521a1bd2577e5e5777"],["/static/js/3.3937ab02.chunk.js","4d840104f2bc04fdda8aa923894c0a14"],["/static/js/4.7330b58a.chunk.js","775a256749e9c490fcc486f00b4dfcdb"],["/static/js/5.ed05c143.chunk.js","ede7457b236d6371605b246a20a8330f"],["/static/js/6.b14e2f4a.chunk.js","45f54db12ee2c885fdfa38d613ed3673"],["/static/js/7.f378789b.chunk.js","645af88bfaa050d856118d1bcda6572e"],["/static/js/8.f080882c.chunk.js","e4b32ed13bc1562d66ecaee99e04399c"],["/static/js/9.c0ee33fc.chunk.js","35da460c184c318500b0e34544e60b3b"],["/static/js/main.f374879b.js","202dc5db373a8a1f1e60199dec589675"],["/static/media/404.f4f3a8d8.jpg","f4f3a8d8e518a09ed15cbf5313a63dea"],["/static/media/SpriteXtreme.e97025fe.png","e97025fef8ed95e87be63452e593233e"],["/static/media/facebook.c3310087.svg","c33100879ab19da0c462c84931aada39"],["/static/media/logo.3ae5cd3b.svg","3ae5cd3be23d876f6c655de0c1db6fef"],["/static/media/opteamize.7a744934.png","7a744934b6eebe4836bf88c4785004ca"],["/static/media/twitter.8ead66e0.svg","8ead66e0ac63aa4b5c0ef94ab07210f0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});